Q1. (Create a program that fulfills the following specification.)

Program Specification

Write following functions for list operations. Take list as input from the User

Add(), Multiply(), Largest(), Smallest(), Sorting(), Remove_Duplicates(), Print()

Only call Print() function to display the results in the below displayed format (i.e all the functions must be called inside the print() function and only the Print() is to be called in the main script).





Q2. (Create a program that fulfills the following specification.)

Program Specification

We want to make a row of bricks that is target inches long. We have a number of small bricks (1 inch each) and big bricks (5 inches each). Make a function that prints True if it is possible to make the exact target by choosing from the given bricks or False otherwise. Take list as input from user where its 1st element represents number of small bricks, middle element represents number of big bricks and 3rd element represents the target.






Q3. (Create a program that fulfills the following specification.)

Program Specification

Write a Python program to construct the following pattern. Take input from User.

Input

 5

Output

Below is the output of execution of this program.

* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
*




Q4. (Create a program that fulfills the following specification.)

Program Specification

Take dictionary as input from user with keys, a b c, with some integer values and print their sum. However, if any of the values is a teen -- in the range 13 to 19 inclusive -- then that value counts as 0, except 15 and 16 do not count as a teens. Write a separate helper "def fix_teen(n):"that takes in an int value and returns that value fixed for the teen rule. In this way, you avoid repeating the teen code 3 times (i.e. "decomposition"). 

Input

 {"a" : 2, "b" : 15, "c" : 13}

Output

Below is the output of execution of this program.

Sum = 17
